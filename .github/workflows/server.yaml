name: Server
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/server.yaml
      - 'server/**'

defaults:
  run:
    shell: bash
    container: node:18-alpine
    working-directory: ./server

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Install test dependencies
        run: yarn install
      - name: Build
        run: yarn build
  Lint:
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - uses: actions/checkout@v4
      - name: Run Linter
        run: yarn lint
  Prettier:
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - uses: actions/checkout@v4
      - name: Run Linter
        run: yarn format
  Tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [ Build ]
    services:
      postgres:
        image: postgres:alpine3.16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      NODE_OPTIONS: "--max_old_space_size=4096"
      DATABASE_URL: "postgresql://test:test@postgres:5432/test?schema=public"
      JWT_SIGNATURE: "12345"
    steps:
      - uses: actions/checkout@v4
      - name: Install test dependencies
        run: yarn install
      - name: Migrate DB Schema
        run: yarn run prisma migrate dev
      - name: Run unit tests with coverage
        run: yarn test --coverage --ci --no-cache --maxConcurrency=1 --forceExit
      - name: Upload coverage reports to Codecov
        if: ${{ always() }}
        uses: codecov/codecov-action@v3
        with:
          directory: ./server/coverage.
          flags: server
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

