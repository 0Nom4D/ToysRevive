name: Server's Workflow
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/server.yaml
      - 'server/**'

defaults:
  run:
    shell: bash
    working-directory: ./server

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: ./.github/actions/install-stack
      - uses: ./.github/actions/cache
      - name: Compile Project
        run: stack build
  Lint:
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: ./.github/actions/cache
      - name: Setup HLint
        run: stack install hlint
      - name: Run HLint
        run: hlint src app
  UTests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: ./.github/actions/cache
      - name: Install Coverage utility
        run: stack install hpc-codecov
      - name: Run unit tests
        run: stack test --coverage
      # TODO: Report Coverage
  RTests:
    name: Robot Tests
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: ./.github/actions/cache
      - name: Setup Robot
        run: pip install -r robot/requirements.txt
      - name: Compile Project
        run: stack build
      - name: Run Tests
        # TODO: Later on, we will need to setup a database, using a docker-compose
        run: (stack run &) ; sleep 10 ; robot -d test-out robot/
      - name: Write results to Pull Request and Summary
        if: always()
        uses: joonvena/robotframework-reporter-action@v2.1
        with:
          report_path: server/test-out/
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}
          # True if not triggered by a PR
          only_summary: ${{ github.event_name != 'pull_request' }}

